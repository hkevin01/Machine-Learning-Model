name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .
      
      - name: Check code formatting
        run: |
          black --check --diff .
          isort --check-only --diff .
      
      - name: Lint code
        run: |
          flake8 --config=config/dev/.flake8 src tests
      
      - name: Type check
        run: |
          mypy --config-file=config/dev/mypy.ini src
      
      - name: Run tests with coverage
        run: |
          pytest --config-file=config/dev/pytest.ini \
                 -v --maxfail=1 \
                 --cov=src \
                 --cov-report=xml \
                 --cov-report=term \
                 --cov-fail-under=80
      
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  gui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest-qt
          pip install -e .
      
      - name: Install system dependencies for GUI
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
      
      - name: Run GUI tests
        run: |
          xvfb-run -a pytest --config-file=config/dev/pytest.ini -v tests/gui -m "gui"

  agent-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .
      
      - name: Run Agent Mode E2E tests
        run: |
          pytest --config-file=config/dev/pytest.ini -v tests/agent -m "agent"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install security tools
        run: |
          pip install bandit safety
      
      - name: Run security checks
        run: |
          bandit -r src/
          safety check -r requirements.txt
